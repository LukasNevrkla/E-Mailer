<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:E_Mailer">


    <!--#region Base styles-->
    <Style x:Key="BaseStyleBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />

    </Style>

    <Style x:Key="BaseStyleBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        
        <Setter Property="BorderThickness" Value="0 0 0 1" />
    </Style>
    <!--#endregion-->

    <!--#region NormalTextBox-->
    <Style x:Key="NormalTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseStyleBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}"
                                       x:Name="placeholder"
                                       FontFamily="{StaticResource BaseFont}"
                                       Padding="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Foreground="{DynamicResource TextForeground}"
                                       >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Click able textblock-->

    <Style x:Key="ClickAbleBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseStyleBlock}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextHightLightedForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--#endregion-->

    <Style TargetType="{x:Type PasswordBox}" x:Key="NormalPasswordBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrush}"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="NormalPasswordBox2">

        <Setter Property="FontSize" Value="{StaticResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}" />

        <!--<Setter Property="local:PasswordBoxProperty.Value" Value="True" />-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   Text="{TemplateBinding Tag}"
                                   x:Name="placeholder"
                                   FontFamily="{StaticResource BaseFont}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"
                                   
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Foreground="{DynamicResource TextForeground}"
                                   >
                            <!--Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisiblityConverter}}"-->
                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>